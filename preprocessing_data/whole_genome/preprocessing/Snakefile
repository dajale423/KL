import os
import sys
import glob
import numpy as np
import pandas as pd
import math
import sys
import random
import pickle
import dask.dataframe as dd
from dask.distributed import Client, LocalCluster

import csv

sys.path.insert(0,'/home/djl34/lab_pd/bin')
import genomic

pd_data_dir = "/home/djl34/lab_pd/data"
KL_data_dir = "/home/djl34/lab_pd/kl/data"
scratch_dir = "/n/scratch3/users/d/djl34"

base_set = ["A", "C", "T", "G"]
chrom_set = [str(x) for x in range(1, 23)]
# chrom_set = ["22"]

wildcard_constraints:
    chrom="\d+"
    
rule all:
    input:
        [os.path.join(scratch_dir, "zoonomia/cactus241way.phyloP_chr" + chrom +".wig") for chrom in chrom_set],

        
########################################## from mut model to tsv file#######################################################
        
rule filter_low_quality_files:
    input:
        os.path.join(scratch_dir, "zoonomia/cactus241way.phyloP.wig")
    output:
        os.path.join(scratch_dir, "zoonomia/cactus241way.phyloP_chr{chrom}.wig")
    run:
        f_in = open(input[0], "rt")
        in_reader = csv.reader(f_in, delimiter=" ")
        
        f_out = open(output[0], "wt", newline="")
        out_writer = csv.writer(f_out, delimiter="\t", lineterminator="\n")
        
        start = False

        for row in in_reader:
            if start:
                if row[0] == "fixedStep":
                    if row[1] == "chrom=chr" + wildcards.chrom:
                        line = int(row[2].split("=")[1])
                    else:
                        break
                else:
                    out_writer.writerow([line, row[0]])
                    line += 1
            else:                
                if row[0] == "fixedStep":
                    if row[1] == "chrom=chr" + wildcards.chrom:
                        start = True
                        line = int(row[2].split("=")[1])
                        
        f_out.close()



            
